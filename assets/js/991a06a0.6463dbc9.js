"use strict";(self.webpackChunktidy_screen_v_2_docs_new=self.webpackChunktidy_screen_v_2_docs_new||[]).push([[4818],{4338:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"chemspace/compounds_input","title":"Molecules input","description":"Every single virtual screening campaign initiates with the identification of a chemical space that is intended to be explored. This chemical space may vary significantly in size, ranging from a single molecule to a large set of hundred millions compounds.","source":"@site/docs/chemspace/compounds_input.md","sourceDirName":"chemspace","slug":"/chemspace/compounds_input","permalink":"/TidyScreen_v2_docs_new/docs/chemspace/compounds_input","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/chemspace/compounds_input.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Molecules input","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Information flow","permalink":"/TidyScreen_v2_docs_new/docs/information_flow"},"next":{"title":"Chemical space generation","permalink":"/TidyScreen_v2_docs_new/docs/chemspace/chemspace_generation"}}');var i=t(4848),c=t(8453);const a={title:"Molecules input",sidebar_position:1},o="Molecules input",l={},r=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"molecules-input",children:"Molecules input"})}),"\n",(0,i.jsx)(n.p,{children:"Every single virtual screening campaign initiates with the identification of a chemical space that is intended to be explored. This chemical space may vary significantly in size, ranging from a single molecule to a large set of hundred millions compounds."}),"\n",(0,i.jsxs)(n.p,{children:["In this respect, the most simple procedure to read a set of compound into TidyScreen is by using a ",(0,i.jsx)(n.code,{children:".csv"})," file structured in the following way:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"field_#1:"})})," ",(0,i.jsx)(n.a,{href:"https://www.daylight.com/dayhtml/doc/theory/theory.smiles.html",children:(0,i.jsx)(n.em,{children:"SMILES"})})," notation indicating the structure of the molecule/s to be read."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"field_#2:"})})," name of the molecule/s"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"field_#3:"})})," Flag used for general purposes (such as filtering, etc)"]}),"\n",(0,i.jsxs)(n.p,{children:["In order to read a ",(0,i.jsx)(n.code,{children:".csv"})," file, the corresponding function should be invoked using the generated ",(0,i.jsx)(n.code,{children:"chemspace_object"})," as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Step #1: It is assumed that TidyScreen packages have been activated\n# Step #2: A project named `tutorial` has been generated\n# Step #3: A chemspace object named `tutorial_chemspace` has been created\n$ tutorial_chemspace.input_csv($PATH_TO_FILE)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When the above function is executed, the first line of the ",(0,i.jsx)(n.code,{children:".csv"})," file is written to the console, asking the user to indicate if the files has a header or not (y/n)."]}),"\n",(0,i.jsxs)(n.p,{children:["Once the input files containing valid SMILES notations, a table named after the read ",(0,i.jsx)(n.code,{children:".csv"})," file will be created in the ",(0,i.jsx)(n.code,{children:"chemspace.db"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Molecules tables contained within the ",(0,i.jsx)(n.code,{children:"chemspace.db"})," can be listed as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Step #1: It is assumed that TidyScreen packages have been activated\n# Step #2: A project named `tutorial` has been generated\n# Step #3: A chemspace object named `tutorial_chemspace` has been created\n$ tutorial_chemspace.list_ligand_tables()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Also a table can be deleted from ",(0,i.jsx)(n.code,{children:"chemspace.db"})," using:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Step #1: It is assumed that TidyScreen packages have been activated\n# Step #2: A project named `tutorial` has been generated\n# Step #3: A chemspace object named `tutorial_chemspace` has been created\n$ tutorial_chemspace.delete_table(TABLE_NAME)\n"})}),"\n",(0,i.jsx)(n.p,{children:"In case a 2D depiction of compounds stored in a given table is required, the following function can be invoked:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Step #1: It is assumed that TidyScreen packages have been activated\n# Step #2: A project named `tutorial` has been generated\n# Step #3: A chemspace object named `tutorial_chemspace` has been created\n$ tutorial_chemspace.depict_ligand_table(TABLE_NAME)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The depiction of a table of molecules will generate a set of ",(0,i.jsx)(n.code,{children:".png"})," files that will be stored within the ",(0,i.jsx)(n.code,{children:"$PROJECT_PATH/chemspace/misc/$TABLE_NAME"})," folder."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["Frequently, during virtual screening campaigns a high number of molecules are stored within a table. Consequently, depicting all of them may lead to a large number or ",(0,i.jsx)(n.code,{children:".png"})," files. In those cases, the following are usefull"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"max_mols_ppage"})}),": indicates the number of depictions included per ",(0,i.jsx)(n.code,{children:".png"})," file. Default: ",(0,i.jsx)(n.code,{children:"25"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"limit"})}),": set the ",(0,i.jsx)(n.em,{children:"maximum"})," number of molecules to depict. Default: ",(0,i.jsx)(n.code,{children:"0"})," ; depicts all molecules stored in the table."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"random"})}),": If set to ",(0,i.jsx)(n.code,{children:"True"})," will depict the required molecules indicated with ",(0,i.jsx)(n.em,{children:"limit"})," picking a randomized selection. Default: ",(0,i.jsx)(n.code,{children:"False"})]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},c=s.createContext(i);function a(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);